name: Deploy Python Application

on:
  workflow_dispatch:
    inputs:
      ip_address:
        description: 'IP Address of the VM'
        required: true
      # You can also add other inputs if needed
  pull_request:
    branches:
      - master
  push:  # Add this section to trigger on pushes to master
    branches:
      - master

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Install dependencies for bootstrap
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Bootstrap VM
        run: |
          sshpass -p ${{ secrets.DEPLOY_PASSWORD }} ssh -o StrictHostKeyChecking=no root@${{ github.event.inputs.ip_address }} << 'EOF'
            mkdir /app
            # Your bootstrap commands here
            sudo apt-get update
            sudo apt-get install -y python3-pip  # Ensure pip is installed
            sudo apt-get install -y python3 python3-venv
            # Any other setup commands you need
            echo "Bootstaping is done...!"
          EOF

  deploy:
    runs-on: ubuntu-latest
    needs: bootstrap
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: /app  # Checkout to a specific folder

      - name: Install dependencies
        run: |
          sshpass -p ${{ secrets.DEPLOY_PASSWORD }} ssh -o StrictHostKeyChecking=no your_user@${{ secrets.DEPLOY_IP }} << 'EOF'
            mkdir /app
            cd /app  # Change this to your app directory
            python3 -m venv /app/venv
            source /app/venv/bin/activate
            pip install -r requirements.txt
            # Kill existing Gunicorn processes
            pkill gunicorn || true  # Use || true to ignore errors if no process is found
            gunicorn app:app --bind 0.0.0.0:80 --daemon  # Change the port if needed
            echo "Application is deployed...!"
          EOF
