name: CD Deploy to DigitalOcean VM

# Trigger the workflow on push to the main branch (or another branch if desired)
on:
  push:
    branches:
      - master  # Adjust this to the branch you want to deploy from

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the latest code from the repository
    - name: Checkout Code
      uses: actions/checkout@v2

    # Step 2: Set up SSH connection to DigitalOcean VM
    - name: Copy SSH Key
      run: |
        echo "${{ secrets.SSH_PUBLIC_KEY }}"
        mkdir -p ~/.ssh  # Ensure the .ssh directory exists
        touch ~/.ssh/authorized_keys
        if ! grep -q "${{ secrets.SSH_PUBLIC_KEY }}" ~/.ssh/authorized_keys; then
          echo "${{ secrets.SSH_PUBLIC_KEY }}" >> ~/.ssh/authorized_keys
        else
          echo "not found the secret"
        fi
        cat ~/.ssh/authorized_keys
        chmod 600 ~/.ssh/authorized_keys  # Set the correct permissions


    # Step 3: Deploy to DigitalOcean VM
    - name: Deploy to DigitalOcean
      run: |
        ssh -o StrictHostKeyChecking=no root@104.248.27.38 << 'EOF'
          cd /root/app/code  # Navigate to your Flask app directory on the VM
          git pull origin master  # Pull the latest changes from GitHub

          # Activate the virtual environment
          source /root/app/venv/bin/activate

          # Install any new dependencies
          pip install -r requirements.txt

          # Restart Gunicorn to apply the changes
          sudo systemctl restart gunicorn
        EOF
